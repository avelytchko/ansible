---
  - set_fact:
      nginx_install_state: "absent"
    when: nginx_remove|default(False)

  - name: Create user nginx
    user:
      name: nginx
      state: "{{ nginx_install_state|default('present') }}"

  - name: Create letsencrypt directory
    file:
      path: /etc/letsencrypt
      state: directory
    when: not nginx_remove|default(False)

  - name: Populate docker-compose.yml with nginx service
    blockinfile:
      path: "{{ docker_compose_file_path }}"
      marker_begin: "begin nginx services block"
      marker_end: "end nginx services block"
      insertafter: '^services:'
      block: |2
          nginx:
            image: nginx:stable
            container_name: nginx
            user: root
            volumes:
              - nginx_conf:/etc/nginx
              - nginx_www:/var/www
              - /etc/letsencrypt:/etc/letsencrypt
            ports:
              - "80:80"
              - "443:443"
      state: "{{ nginx_install_state|default('present') }}"
    register: compose_file

  - name: Populate docker-compose.yml with nginx volumes
    blockinfile:
      path: "{{ docker_compose_file_path }}"
      marker_begin: "begin nginx volumes block"
      marker_end: "end nginx volumes block"
      insertafter: '^volumes:'
      block: |2
          nginx_conf:
            driver: local
          nginx_www:
            driver: local
      state: "{{ nginx_install_state|default('present') }}"
    notify:
      - restart docker-compose

  - name: Remove default nginx config
    file:
      path: /var/lib/docker/volumes/dockercompose_nginx_conf/_data/conf.d/default
      state: absent

  - meta: flush_handlers

  - name: Populate nginx config file
    template:
      src: "{{ item }}.j2"
      dest: "/var/lib/docker/volumes/dockercompose_nginx_conf/_data/conf.d/{{ ansible_fqdn }}_{{ item }}.conf"
    notify:
      - restart docker-compose
    with_items: "{{ nginx_templates }}"
    when: not nginx_remove|default(False)

  - meta: flush_handlers

  - block:

    - name: Add certbot's official GPG key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 75BCA694

    - name: Add certbot repository
      apt_repository:
        repo: "deb http://ppa.launchpad.net/certbot/certbot/ubuntu {{ ansible_distribution_release }} main"
        update_cache: yes
        state: "{{ nginx_install_state|default('present') }}"

    - name: Install certbot
      apt:
        name: "{{ item }}"
        state: "{{ nginx_install_state|default('present') }}"
      loop:
        - certbot
        - letsencrypt

    - name: Create letsencrypt-auto directory
      file:
        path: /var/lib/docker/volumes/dockercompose_nginx_www/_data/letsencrypt-auto
        state: directory
        owner: nginx
      when: not nginx_remove|default(False)

    - name: Get ssl certificate via certbot
      shell: "certbot certonly -n --email {{ letsencrypt_certbot_email }} --agree-tos --webroot -w /var/lib/docker/volumes/dockercompose_nginx_www/_data/letsencrypt-auto -d {{ ansible_fqdn }}"
      when: not nginx_remove|default(False)

    - name: Add certbot cron job
      cron:
        name: "certbot renew"
        day: "1"
        job: "/usr/bin/certbot renew"
        state: "{{ nginx_install_state|default('present') }}"

    - name: Populate ssl nginx config file for jenkins
      template:
        src: "{{ item }}_ssl.j2"
        dest: "/var/lib/docker/volumes/dockercompose_nginx_conf/_data/conf.d/{{ ansible_fqdn }}_{{ item }}.conf"
      notify:
        - restart docker-compose
      with_items: "{{ nginx_templates }}"
      when: not nginx_remove|default(False)

    when: letsencrypt_install

  - name: Remove letsencrypt directory
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /etc/letsencrypt
    when: nginx_remove|default(False)
